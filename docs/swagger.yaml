definitions:
  entity.DepositHistory:
    properties:
      amount:
        type: number
      id:
        type: integer
      payment_method:
        type: string
      type:
        type: string
      user_id:
        type: integer
    type: object
  entity.DepositRequest:
    properties:
      amount:
        type: number
      payment_method:
        type: string
    required:
    - amount
    - payment_method
    type: object
  entity.HttpResp:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
  entity.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  entity.LoginResponse:
    properties:
      token:
        type: string
    type: object
  entity.Payment:
    properties:
      amount:
        type: number
      id:
        type: integer
      payment_date:
        type: string
      payment_method:
        type: string
      rental:
        items:
          $ref: '#/definitions/entity.Rental'
        type: array
      user_id:
        type: integer
    type: object
  entity.RegisterRequest:
    properties:
      deposit_amount:
        type: number
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      role:
        type: string
      username:
        type: string
    required:
    - deposit_amount
    - email
    - full_name
    - password
    - role
    - username
    type: object
  entity.Rental:
    properties:
      id:
        type: integer
      payment_id:
        type: integer
      rental_date:
        type: string
      rental_details:
        items:
          $ref: '#/definitions/entity.RentalDetail'
        type: array
      user_id:
        type: integer
    type: object
  entity.RentalDetail:
    properties:
      book_id:
        type: integer
      id:
        type: integer
      rental_id:
        type: integer
      return_date:
        type: string
      returned:
        type: boolean
    type: object
  entity.User:
    properties:
      deposit_amount:
        type: number
      deposit_histories:
        items:
          $ref: '#/definitions/entity.DepositHistory'
        type: array
      email:
        type: string
      full_name:
        type: string
      id:
        type: integer
      payments:
        items:
          $ref: '#/definitions/entity.Payment'
        type: array
      rentals:
        items:
          $ref: '#/definitions/entity.Rental'
        type: array
      role:
        type: string
      username:
        type: string
    type: object
info:
  contact:
    email: nafisa.alfiani.ica@gmail.com
    name: Nafisa Alfiani
paths:
  /deposits:
    post:
      consumes:
      - application/json
      description: Top up logged in user deposit
      parameters:
      - description: deposit request
        in: body
        name: deposit
        required: true
        schema:
          $ref: '#/definitions/entity.DepositRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.HttpResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.HttpResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.HttpResp'
      security:
      - BearerAuth: []
      summary: Top up user deposit
      tags:
      - deposits
  /deposits/history:
    get:
      consumes:
      - application/json
      description: Get logged in user deposit history
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.HttpResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.HttpResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.HttpResp'
      security:
      - BearerAuth: []
      summary: Get deposit history
      tags:
      - deposits
  /payments/methods:
    get:
      consumes:
      - application/json
      description: Lists available payment methods
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.HttpResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.HttpResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.HttpResp'
      security:
      - BearerAuth: []
      summary: List payment methods
      tags:
      - payments
  /users:
    get:
      consumes:
      - application/json
      description: Get logged in user detail
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/entity.HttpResp'
            - properties:
                data:
                  $ref: '#/definitions/entity.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.HttpResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.HttpResp'
      security:
      - BearerAuth: []
      summary: Fetch user detail
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      description: Allow existing user to login
      parameters:
      - description: login request
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/entity.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/entity.HttpResp'
            - properties:
                data:
                  $ref: '#/definitions/entity.LoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.HttpResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.HttpResp'
      summary: Login existing user
      tags:
      - users
  /users/register:
    post:
      consumes:
      - application/json
      description: Allow new user to register their account info
      parameters:
      - description: register request
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/entity.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/entity.HttpResp'
            - properties:
                data:
                  $ref: '#/definitions/entity.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.HttpResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.HttpResp'
      summary: Register new user
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
